---
- name: red hat based systems tasks
  when: ansible_facts['os_family'] == 'RedHat'
  block:
    - name: set_fact iscsi_pkgs
      set_fact:
        iscsi_pkgs:
          - tcmu-runner
          - targetcli
          - ceph-iscsi

    - name: when ceph_iscsi_config_dev is true
      when:
        - ceph_origin == 'repository'
        - ceph_repository in ['dev', 'community']
        - ceph_iscsi_config_dev | bool
      block:
        - name: ceph-iscsi dependency repositories
          get_url:
            url: "https://shaman.ceph.com/api/repos/tcmu-runner/master/latest/{{ ansible_facts['distribution'] | lower }}/{{ ansible_facts['distribution_major_version'] }}/repo?arch={{ ansible_facts['architecture'] }}"
            dest: '/etc/yum.repos.d/tcmu-runner-dev.repo'
            force: true
          register: result
          until: result is succeeded

        - name: ceph-iscsi development repository
          get_url:
            url: "https://shaman.ceph.com/api/repos/ceph-iscsi/master/latest/{{ ansible_facts['distribution'] | lower }}/{{ ansible_facts['distribution_major_version'] }}/repo"
            dest: '/etc/yum.repos.d/ceph-iscsi-dev.repo'
            force: true
          register: result
          until: result is succeeded
          when: ceph_repository == 'dev'

        - name: ceph-iscsi stable repository
          get_url:
            url: "https://download.ceph.com/ceph-iscsi/3/rpm/el{{ ansible_facts['distribution_major_version'] }}/ceph-iscsi.repo"
            dest: /etc/yum.repos.d/ceph-iscsi.repo
            force: true
          register: result
          until: result is succeeded
          when: ceph_repository == 'community'

    - name: install ceph iscsi package
      package:
        name: "{{ iscsi_pkgs }}"
        state: "{{ (upgrade_ceph_packages|bool) | ternary('latest','present') }}"
      register: result
      until: result is succeeded

- name: check the status of the target.service override
  stat:
    path: /etc/systemd/system/target.service
  register: target

- name: mask the target service - preventing manual start
  systemd:
    name: target
    masked: yes
    enabled: no
  when:
    - target.stat.exists
    - not target.stat.islnk

# Only start tcmu-runner, so configure_iscsi.yml can create disks.
# We must start rbd-target-gw/api after configure_iscsi.yml to avoid
# races where they are both trying to setup the same object during
# a rolling update.
- name: start tcmu-runner
  service:
    name: tcmu-runner
    state: started
    enabled: yes
    masked: no
